{"version":3,"file":"static/js/393.0fda0c4a.chunk.js","mappings":"+SAEaA,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEGC,EAAAA,EAAAA,IAAU,4FAE/B,KAAD,EAFW,OAEXL,EAAAE,EAAAI,KAFOL,EAAID,EAAJC,KAAIC,EAAAK,OAAA,SAGLN,GAAI,aAAAC,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEL,IAAIO,MAAMP,EAAAM,GAAME,SAAS,KAAD,oBAAAR,EAAAS,OAAA,GAAAZ,EAAA,kBAEjC,kBAToB,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAWRC,EAAa,eAAAC,GAAAlB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkB,EAAMC,GAAE,IAAAC,EAAAjB,EAAA,OAAAH,IAAAA,MAAA,SAAAqB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAhB,KAAA,EAAAgB,EAAAf,KAAA,EAEVC,EAAAA,EAAAA,IAAU,sCAADe,OACQH,EAAE,8CACxC,KAAD,EAFW,OAEXC,EAAAC,EAAAb,KAFOL,EAAIiB,EAAJjB,KAAIkB,EAAAZ,OAAA,SAILN,GAAI,aAAAkB,EAAAhB,KAAA,EAAAgB,EAAAX,GAAAW,EAAA,SAEL,IAAIV,MAAMU,EAAAX,GAAME,SAAS,KAAD,oBAAAS,EAAAR,OAAA,GAAAK,EAAA,kBAEjC,gBAVyBK,GAAA,OAAAN,EAAAH,MAAA,KAAAC,UAAA,KAYbS,EAAO,eAAAC,GAAA1B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA0B,EAAMP,GAAE,IAAAQ,EAAAxB,EAAA,OAAAH,IAAAA,MAAA,SAAA4B,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAEJC,EAAAA,EAAAA,IAAU,sCAADe,OACQH,EAAE,sDACxC,KAAD,EAFW,OAEXQ,EAAAC,EAAApB,KAFOL,EAAIwB,EAAJxB,KAAIyB,EAAAnB,OAAA,SAILN,GAAI,aAAAyB,EAAAvB,KAAA,EAAAuB,EAAAlB,GAAAkB,EAAA,SAEL,IAAIjB,MAAMiB,EAAAlB,GAAME,SAAS,KAAD,oBAAAgB,EAAAf,OAAA,GAAAa,EAAA,kBAEjC,gBAVmBG,GAAA,OAAAJ,EAAAX,MAAA,KAAAC,UAAA,KAYPe,EAAU,eAAAC,GAAAhC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgC,EAAMb,GAAE,IAAAc,EAAA9B,EAAA,OAAAH,IAAAA,MAAA,SAAAkC,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA7B,KAAA,EAAA6B,EAAA5B,KAAA,EAEPC,EAAAA,EAAAA,IAAU,sCAADe,OACQH,EAAE,sDACxC,KAAD,EAFW,OAEXc,EAAAC,EAAA1B,KAFOL,EAAI8B,EAAJ9B,KAAI+B,EAAAzB,OAAA,SAILN,GAAI,aAAA+B,EAAA7B,KAAA,EAAA6B,EAAAxB,GAAAwB,EAAA,SAEL,IAAIvB,MAAMuB,EAAAxB,GAAME,SAAS,KAAD,oBAAAsB,EAAArB,OAAA,GAAAmB,EAAA,kBAEjC,gBAVsBG,GAAA,OAAAJ,EAAAjB,MAAA,KAAAC,UAAA,KAYVqB,EAAe,eAAAC,GAAAtC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsC,EAAMC,GAAK,IAAAC,EAAArC,EAAA,OAAAH,IAAAA,MAAA,SAAAyC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAApC,KAAA,EAAAoC,EAAAnC,KAAA,EAEfC,EAAAA,EAAAA,IAAU,qFAE/B,CAAEmC,OAAQ,CAAEH,MAAOA,KACnB,KAAD,EAHW,OAGXC,EAAAC,EAAAjC,KAHOL,EAAIqC,EAAJrC,KAAIsC,EAAAhC,OAAA,SAKLN,GAAI,aAAAsC,EAAApC,KAAA,EAAAoC,EAAA/B,GAAA+B,EAAA,SAEL,IAAI9B,MAAM8B,EAAA/B,GAAME,SAAS,KAAD,oBAAA6B,EAAA5B,OAAA,GAAAyB,EAAA,kBAEjC,gBAX2BK,GAAA,OAAAN,EAAAvB,MAAA,KAAAC,UAAA,I,2JC/B5B,EAfiB,WACf,OACE6B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,OAAMH,SAAC,YAElBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,UAASH,SAAC,mBAK7B,E,kBCfaI,EAASC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gGAOnBC,EAASH,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6E,SCqEnC,EAvEqB,WAAO,IAADG,EAAAC,EAEnBtC,GADSuC,EAAAA,EAAAA,MACGC,QAElBC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAEhCI,EAKEF,EALFE,YACAC,EAIEH,EAJFG,MACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,SAAQC,EAENN,EADFO,OAAAA,OAAM,IAAAD,EAAG,GAAEA,EAGPE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAA2B,QAArBnB,EAAe,QAAfC,EAACe,EAASI,aAAK,IAAAnB,OAAA,EAAdA,EAAgBoB,YAAI,IAAArB,EAAAA,EAAI,KAqBhD,OAhBAsB,EAAAA,EAAAA,YAAU,WAER,IAEE,IAAMC,EAAS,eAAAjF,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAE,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACGU,EAAAA,EAAAA,IAAcG,GAAI,KAAD,EAA9BhB,EAAIC,EAAAI,KACVyD,EAAe9D,GAAM,wBAAAC,EAAAS,OAAA,GAAAZ,EAAA,KACtB,kBAHc,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAIfgE,GAIA,CAHA,MAAOC,GACP,CAIJ,GAAG,CAAC7D,KAGFyB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAIyB,EAASO,QAAQnC,UACzBC,EAAAA,EAAAA,KAACO,EAAM,CAAAR,SAAC,gBAEVF,EAAAA,EAAAA,MAACM,EAAM,CAAAJ,SAAA,EACLF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKqB,KACLvB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,cAAuC,GAA3BoC,KAAKC,MAAMf,GAAmB,QAC7CrB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIuB,KACJtB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,KAAAD,SACGyB,EAAOa,KAAI,SAAAnE,GAAA,IAAGoE,EAAIpE,EAAJoE,KAAMlE,EAAEF,EAAFE,GAAE,OACrByB,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAgBuC,EAAK,MAAVlE,EAAkB,UAInC4B,EAAAA,EAAAA,KAAA,OACEuC,IACEpB,EACI,kCAAoCA,EACpCqB,EAENC,IAAKrB,EACLsB,MAAO,aAIb1C,EAAAA,EAAAA,KAAC2C,EAAQ,KACT3C,EAAAA,EAAAA,KAAC4C,EAAAA,GAAM,MAGb,C","sources":["components/GetFilms/Get.js","components/FilmInfo/FilmInfo.js","pages/MovieDetails/Movie.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nexport const getFilms = async () => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=fed317ab3be0f2b7619ff5ef4eb716b2`\n    );\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const getSingleFilm = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=fed317ab3be0f2b7619ff5ef4eb716b2`\n    );\n\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const getCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=fed317ab3be0f2b7619ff5ef4eb716b2`\n    );\n\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=fed317ab3be0f2b7619ff5ef4eb716b2`\n    );\n\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const getMoviesSearch = async query => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=fed317ab3be0f2b7619ff5ef4eb716b2`,\n      { params: { query: query } }\n    );\n\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FilmInfo = () => {\n  return (\n    <>\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n    </>\n  );\n};\nexport default FilmInfo;\n","import styled from 'styled-components';\n\nexport const Wraper = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  gap: 20px;\n  margin-left: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 10px;\n  margin-bottom: 20px;\n  margin-left: 10px;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { getSingleFilm } from '../../components/GetFilms/Get';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport FilmInfo from '../../components/FilmInfo/FilmInfo';\nimport { Wraper, Button } from './Movie.styled';\nimport foto from '../../components/NotFoundActor/NotFoundActor.jpeg';\n\nconst MovieDetails = () => {\n  const moveId = useParams();\n  const id = moveId.movieId;\n\n  const [fetchedFilm, setFetchedFilm] = useState([]);\n  const {\n    poster_path,\n    title,\n    vote_average,\n    overview,\n    genres = [],\n  } = fetchedFilm;\n\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  // const [error, setError] = useState(false);\n  // const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // setLoading(true);\n    try {\n      // setError(false);\n      const fetchFilm = async () => {\n        const data = await getSingleFilm(id);\n        setFetchedFilm(data);\n      };\n      fetchFilm();\n    } catch (error) {\n      // setError(true);\n    } finally {\n      // setLoading(false);\n    }\n  }, [id]);\n\n  return (\n    <>\n      <>\n        <Link to={backLink.current}>\n          <Button> Go back</Button>\n        </Link>\n        <Wraper>\n          <div>\n            <h1>{title}</h1>\n            <p>User Score:{Math.round(vote_average) * 10}%</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <p>\n              {genres.map(({ name, id }) => (\n                <span key={id}>{name} </span>\n              ))}\n            </p>\n          </div>\n          <img\n            src={\n              poster_path\n                ? 'https://image.tmdb.org/t/p/w500' + poster_path\n                : foto\n            }\n            alt={title}\n            width={300}\n          />\n        </Wraper>\n      </>\n      <FilmInfo />\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["getFilms","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","sent","abrupt","t0","Error","message","stop","apply","arguments","getSingleFilm","_ref2","_callee2","id","_yield$axios$get2","_context2","concat","_x","getCast","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMoviesSearch","_ref5","_callee5","query","_yield$axios$get5","_context5","params","_x4","_jsxs","_Fragment","children","_jsx","Link","to","Wraper","styled","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","_location$state$from","_location$state","useParams","movieId","_useState","useState","_useState2","_slicedToArray","fetchedFilm","setFetchedFilm","poster_path","title","vote_average","overview","_fetchedFilm$genres","genres","location","useLocation","backLink","useRef","state","from","useEffect","fetchFilm","error","current","Math","round","map","name","src","foto","alt","width","FilmInfo","Outlet"],"sourceRoot":""}