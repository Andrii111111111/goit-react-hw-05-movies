{"version":3,"file":"static/js/541.21ce4eb3.chunk.js","mappings":"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","sources":["components/Cast/Cast.js","components/GetFilms/Get.js"],"sourcesContent":["import { getCast } from 'components/GetFilms/Get';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [fetchedCast, setFetchedCast] = useState([]);\n  const moveId = useParams();\n  const id = moveId.movieId;\n\n  useEffect(() => {\n    // setLoading(true);\n    try {\n      // setError(false);\n      const fetchFilm = async () => {\n        const { cast } = await getCast(id);\n\n        setFetchedCast(cast);\n      };\n      fetchFilm();\n    } catch (error) {\n      // setError(true);\n    } finally {\n      // setLoading(false);\n    }\n  }, [id]);\n\n  return (\n    <>\n      {fetchedCast.length > 0 && (\n        <ul>\n          {fetchedCast.map(({ name, id, character, profile_path }) => (\n            <li key={id}>\n              <img\n                src={'https://image.tmdb.org/t/p/w500' + profile_path}\n                alt={name}\n                width={300}\n              />\n              <h3>{name}</h3>\n              <p>Character:{character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nexport const getFilms = async () => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=fed317ab3be0f2b7619ff5ef4eb716b2`\n    );\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const getSingleFilm = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=fed317ab3be0f2b7619ff5ef4eb716b2`\n    );\n\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const getCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=fed317ab3be0f2b7619ff5ef4eb716b2`\n    );\n\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=fed317ab3be0f2b7619ff5ef4eb716b2`\n    );\n\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const getMoviesSearch = async query => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=fed317ab3be0f2b7619ff5ef4eb716b2`,\n      { params: { query: query } }\n    );\n\n    return data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","fetchedCast","setFetchedCast","id","useParams","movieId","useEffect","fetchFilm","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getCast","cast","_context","prev","next","getCast","sent","stop","apply","arguments","error","_jsx","_Fragment","children","length","map","_ref2","name","character","profile_path","_jsxs","src","alt","width","getFilms","_yield$axios$get","data","axios","abrupt","t0","Error","message","getSingleFilm","_callee2","_yield$axios$get2","_context2","concat","_x","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMoviesSearch","_ref5","_callee5","query","_yield$axios$get5","_context5","params","_x4"],"sourceRoot":""}